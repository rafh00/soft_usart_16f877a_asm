;	BIBLIOTECAS DE UART VIA SOFTWARE (APENAS MODO ASSÍNCRONO)
;	PIC16F877A, CLOCK = 16MHz
;	RAFAEL ALVES FUHRMANN
;	RC0 = TX, RC1 = RX
;	DEPENDÊNCIAS: <macros_rafh.inc>
;	ALGUM REGISTRADOR DEDICADO A FLAGS NO PROGRAMA PRINCIPAL
	CBLOCK
		RX_REG_DADO, TX_REG_DADO, CONTA_TMR_UART, CONTA8
	ENDC
FLAG	EQU	FLAGS	;INDICANDO QUE O REGISTRADOR 'FLAGS' EXISTE NO PROGRAMA PRINCIPAL
#DEFINE	RX_DATA_FLAG	FLAG,0
#DEFINE	TX_PIN	PORTC,0
#DEFINE RX_PIN	PORTC,1
;CÁLCULO DO NÚMERO DE ITERAÇÕES. CONSIDERA UMA ESTRUTURA DE ATRASO DE 3N+3.
;SERÁ EXPANDIDA EM FUTURAS VERSÕES DA BIBLIOTECA
;BAUDRATE DE 9600 BPS CONSIDERADO
K_CONT	EQU	.16000000/.12/.9600-.1
IF	K_CONT > .255
	ERROR "K_CONT FORA DA FAIXA, RECALCULAR!"
ENDIF
K_CONT_HALF	EQU K_CONT/.2	;PARA TEMPORIZAÇÃO DE MEIO Tbit
;---------------------------------------------------
;PARA CONFIGURAR A UART VIA SOFTWARE
;DEFINE O ESTADO DO REGISTRADOR TRISC
;ENTÃO, SE FOR UTILIZAR A PORTC PARA OUTRAS COISAS
;DEVE-SE ATENTAR EM CHAMAR ESTA SUB ANTES, CUIDANDO
;COM RC0 E RC1, ESTAS ESTÃO RESERVADAS
;---------------------------------------------------
CONFIGURA_UART:
	BANCO1
	MOVLW	0X02
	MOVWF	TRISC
	BANCO0
	BSF	TX_PIN	;COLOCA EM NÍVEL ALTO OS CANAIS DA UART
	BSF	RX_PIN
	RETURN
;---------------------------------------------------
;	SUB PARA RECEPÇÃO DE DADOS. A LÓGICA CONSISTE EM
;	VALIDAR O BIT DE START USANDO O DELAY DE Tbit/2
;	E ENTÃO VALIDAR OS SUBSEQUENTES, SIMULAR O REGIS
;	TRADOR DE DESLOCAMENTO E INDICAR QUANDO A RECEP
;	ÇÃO FOR BEM SUCEDIDA.
;	BITS DE ERRO A SEREM ADICIONADOS EM FUTURAS VERSÕES
;---------------------------------------------------
RX_RECEBE_DADO:
	MOVLW	.8
	MOVWF	CONTA8	;REGISTRADOR PARA VALIDAR OS 8 BITS
	CLRF	RX_REG_DADO	;LIMPA O BUFFER DA RECEPÇÃO
	BCF	RX_DATA_FLAG	;LIMPA A FLAG QUE INDICA UM DADO RECEBIDO
	CALL	DELAY_HALF_TBIT	;ESPERA O MEIO TBIT
	BTFSC	RX_PIN	;BIT DE START RECEBIDO?
	RETURN	;NÃO, ENTÃO SAI DA ROTINA
LOOP_RX_VAL:
	CALL	DELAY_HALF_TBIT	;SIM, ESPERA MAIS UM MEIO TBIT
	BCF	STATUS,C	;LIMPA O CARRY DO REG STATUS
	BTFSC	RX_PIN	;ESTADO DO PINO É NÍVEL BAIXO?
	BSF	STATUS,C	;NÃO, ENTÃO DEVO SETAR O CARRY
	RRF	RX_REG_DADO,F	;ROTACIONA A DIREITA, O CARRY ENTRARÁ NO MAIS SIGNIFICATIVO
	DECFSZ	CONTA8,F	;BITS RESTANTES -= 1
	GOTO	LOOP_RX_VAL	;AINDA NÃO ACABOU, LOGO VALIDA O SEGUINTE
	BSF	RX_DATA_FLAG	;ACABOU, ENTÃO INDICA QUE EXISTE UM NOVO DADO RECEBIDO
	RETURN	;E ENTÃO, RETORNA DA SUBROTINA
;---------------------------------------------------
;	SUBROTINA PARA ENVIO DE 8 BITS NA TX. USA O CONC
;	EITO DE 8N1. OS DADOS A SEREM TRANSMITIDOS DEVEM
;	ESTAR CONTIDOS EM WREG PREVIAMENTE
;---------------------------------------------------
TX_ENVIA_DADO:
	MOVWF	TX_REG_DADO	;COLOCA O DADO A SER TRANSMITIDO NO BUFFER
	MOVLW	.8
	MOVWF	CONTA8	;PARA CONTABILIZAR OS 8BITS
	BCF	TX_PIN	;COLOCA O TX EM NÍVEL BAIXO, ENVIA O START_BIT
LOOP_TX_VAL:
	CALL	DELAY_HALF_TBIT	;PARA ESPERAR UM TBIT INTEIRO
	CALL	DELAY_HALF_TBIT
	BCF	TX_PIN
	RRF	TX_REG_DADO,F
	BTFSC	STATUS,C
	BSF	TX_PIN
	DECFSZ	CONTA8,F
	GOTO	LOOP_TX_VAL
	CALL	DELAY_HALF_TBIT
	CALL	DELAY_HALF_TBIT
	BSF	TX_PIN	;STOP BIT
	RETURN
;---------------------------------------------------
;	DELAY DE ESTRUTURA 3N+3
;	O REG CONTA_TMR_UART AGREGA O NÚMERO DE PASSOS
;	PARA A TEMPORIZAÇÃO DE MEIO Tbit
;	NECESSÁRIO PARA A VALIDAÇÃO DOS BITS
;---------------------------------------------------
DELAY_HALF_TBIT:
	MOVLW	K_CONT_HALF
	MOVWF	CONTA_TMR_UART
	DECFSZ	CONTA_TMR_UART,F
	GOTO	$-1
	RETURN